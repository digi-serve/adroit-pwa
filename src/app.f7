
<template>
  <div id="app">

    <!-- Left panel with cover effect-->
    <div class="panel panel-left panel-push dark panel-init">
      <div class="view">
        <div class="page bg-color-primary menu_sidebar">
          <div class="page-content">
            <div class="block text-align-center no-margin-bottom">
              <!-- block content -->
              <img src="assets/images/AdroitLogoNew.png" width="90%" class="sidebar_logo" />
              <p>
                ${user.value.display_name}
              </p>
            </div>
            <div class="list bg_transparent">
               <ul>
                 <li>
                  <a href="/help/" class="item-content item-link panel-close">
                    <div class="item-media"><i class="material-icons">help</i></div>
                    <div class="item-inner">
                      <div class="item-title">Help</div>
                    </div>
                  </a>
                 </li>
                 <li>
                  <a href="/feedback/" class="item-content item-link panel-close">
                    <div class="item-media"><i class="material-icons">mode_comment</i></div>
                    <div class="item-inner">
                      <div class="item-title">Feedback</div>
                    </div>
                  </a>
                 </li>
                 <li>
                  <a href="#" @click="${showTutorial}" class="item-content item-link panel-close">
                    <div class="item-media"><i class="material-icons">play_circle</i></div>
                    <div class="item-inner">
                      <div class="item-title">Show tutorial</div>
                    </div>
                  </a>
                 </li>
                 <li>
                  <a href="/locations/" class="item-content item-link panel-close">
                    <div class="item-media"><i class="material-icons">location_on</i></div>
                    <div class="item-inner">
                      <div class="item-title">My Locations...</div>
                    </div>
                  </a>
                 </li>
                 <li>
                  <a href="#" @click="${logout}" class="item-content item-link">
                    <div class="item-media"><i class="material-icons">logout</i></div>
                    <div class="item-inner">
                       <div class="item-title">Log out</div>
                    </div>
                  </a>
                </li>
              </ul>
            </div>
            <div class="block text-align-center" style="position: absolute; width: 100%; bottom: 0px;">
              <p>
                ${versionNumber}
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Your main view, should have "view-main" class -->
    <div class="view view-main view-init safe-areas" data-url="/"></div>

    <!-- Login Screen -->
    <div class="login-screen" id="my-login-screen">
      <div class="view">
        <div class="page bg-color-primary dark">
          <div class="page-content login-screen-content bg-color-primary">
            <!-- <div class="login-screen-title">Login</div> -->
            <div class="block text-align-center no-margin-bottom">
              <!-- block content -->
              <img src="assets/images/AdroitLogoNew.png" width="90%" class="sidebar_logo" />
            </div>
            <div class="list">
              <ul>
                <li class="item-content item-input">
                  <div class="item-inner">
                    <div class="item-title item-label">Username</div>
                    <div class="item-input-wrap">
                      <input autocorrect="off" autocapitalize="none" autocomplete="off" spellcheck="false" type="text" id="username" name="username" placeholder="Your username" value="${username}" @input="${updateUsername}"/>
                      <span class="input-clear-button"></span>
                    </div>
                  </div>
                </li>
                <li class="item-content item-input">
                  <div class="item-inner">
                    <div class="item-title item-label">Password</div>
                    <div class="item-input-wrap">
                      <input type="password" id="password" name="password" placeholder="Your password" value="${password}" @input="${updatePassword}"/>
                      <span class="input-clear-button"></span>
                    </div>
                  </div>
                </li>
              </ul>
            </div>
            <div class="block">
              <button class="button color-primary button-outline button-round bg-color-white button-large login-button button-preloader ${isLoading ? 'button-loading' : ''}" @click="${authenticate}">
                <div class="preloader">
                  <span class="preloader-inner">
                    <span class="preloader-inner-line"></span>
                    <span class="preloader-inner-line"></span>
                    <span class="preloader-inner-line"></span>
                    <span class="preloader-inner-line"></span>
                    <span class="preloader-inner-line"></span>
                    <span class="preloader-inner-line"></span>
                    <span class="preloader-inner-line"></span>
                    <span class="preloader-inner-line"></span>
                  </span>
                </div>
                <span>Sign In</span>
              </button>
              <!-- <div class="block-footer">Some text about login information.<br/>Click "Sign In" to close Login Screen</div> -->
            </div>
          </div>
        </div>
      </div>
    </div>

  </div>
</template>
<script>
  import Api from "/js/api.js";
  import store from "/js/store.js";
  import fetchJson from "/js/fetch.js";

  export default (props, { $, $f7, $update, $store }) => {

    store.dispatch("getToken");
    store.dispatch("getUser");
    const user = $store.getters.user;
    let isLoading = false;
    let versionNumber = $f7.version;
    // request user data on page init

    // fetchJson(Api.urls.whoami, { method: 'GET' })
    //   .then((res) => {
    //   user = res.json.data;
    //   $update();
    // }).catch(function (err) {
    //   $f7.loginScreen.open("#my-login-screen");
    // });
    //
    // Login screen demo data
    let username = '';
    let password = '';

    const updateUsername = (e) => {
      username = e.target.value;
      $update();
    }
    const updatePassword = (e) => {
      password = e.target.value;
      $update();
    }

    const logout = () => {
      $f7.preloader.show();
      fetchJson(Api.urls.logout, { method: 'GET' })
        .then(data => {
          store.dispatch('addCsrfToken', "");
          $f7.loginScreen.open("#my-login-screen");
          $f7.preloader.hide();
        })
        .catch(err => {
          console.error("logout failed but pretending it didn't");
          store.dispatch('addCsrfToken', "");
          $f7.loginScreen.open("#my-login-screen");
          $f7.preloader.hide();
        });
    }

    const authenticate = () => {
      isLoading = true;
      $update();
      fetchJson(Api.urls.csrfToken, { method: 'GET' })
        .then(csrfResponse => {
          store.dispatch('addCsrfToken', csrfResponse.json._csrf);
          fetchJson(Api.urls.login, {
            method: 'POST',
            body: JSON.stringify({
              username,
              password,
            })
          })
            .then(async (data) => {
              store.dispatch("getUser");
              $("#password")[0].value = "";
              $f7.loginScreen.close();
              isLoading = false;
              $update();
            })
            .catch(err => {
              $f7.toast.create({
                icon: '<i class="material-icons">error</i>',
                text: `Login Failed`,
                position: 'center',
                closeTimeout: 2000,
              }).open();
              isLoading = false;
              $update();
            });
        })
        .catch(err => {
          $f7.toast.create({
            icon: '<i class="material-icons">error</i>',
            text: `Login Failed`,
            position: 'center',
            closeTimeout: 2000,
          }).open();
          isLoading = false;
          $update();
        });
    }

    const showTutorial = (e) => {
      // debugger;
      $f7.view.main.router.navigate("/", {
        props: {
          showTutorial: true
        },
        reloadCurrent: true
      })
    }

    return $render;
  }
</script>
